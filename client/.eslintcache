[{"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\index.js":"1","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\reportWebVitals.js":"2","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\App.js":"3","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\shop\\Shop.js":"4","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\pages\\Landing.js":"5","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\Header.js":"6","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\pages\\About.js":"7","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Chatbot.js":"8","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\shop\\ItemList.js":"9","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\QuickReplies.js":"10","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Message.js":"11","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Card.js":"12","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\autoLogout\\IdleModal.js":"13","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\LoginForm.js":"14","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\QuickReply.js":"15","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\FireBaseLogin.js":"16","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\fire.js":"17"},{"size":515,"mtime":1609219082723,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":622,"mtime":1612871104330,"results":"21","hashOfConfig":"19"},{"size":195,"mtime":1607154797156,"results":"22","hashOfConfig":"19"},{"size":390,"mtime":1612460713917,"results":"23","hashOfConfig":"19"},{"size":761,"mtime":1609399924594,"results":"24","hashOfConfig":"19"},{"size":138,"mtime":1607101693276,"results":"25","hashOfConfig":"19"},{"size":12254,"mtime":1613023350805,"results":"26","hashOfConfig":"19"},{"size":151,"mtime":1607104261529,"results":"27","hashOfConfig":"19"},{"size":1669,"mtime":1612872150993,"results":"28","hashOfConfig":"19"},{"size":1837,"mtime":1612857669536,"results":"29","hashOfConfig":"19"},{"size":892,"mtime":1612872410523,"results":"30","hashOfConfig":"19"},{"size":1397,"mtime":1612457021544,"results":"31","hashOfConfig":"19"},{"size":3167,"mtime":1613070933084,"results":"32","hashOfConfig":"19"},{"size":1114,"mtime":1612872101788,"results":"33","hashOfConfig":"19"},{"size":1084,"mtime":1613071024491,"results":"34","hashOfConfig":"19"},{"size":452,"mtime":1609242045163,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bgikq4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\index.js",[],["76","77"],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\reportWebVitals.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\App.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\shop\\Shop.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\pages\\Landing.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\Header.js",[],["78","79"],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\pages\\About.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Chatbot.js",["80","81"],"import React, { Component } from \"react\";\r\nimport axios from \"axios/index\";\r\nimport Cookies from \"universal-cookie\";\r\n//import { v4 as uuid } from \"uuid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport IdleTimer from \"react-idle-timer\";\r\n\r\nimport Card from \"./Card\";\r\nimport Message from \"./Message\";\r\nimport QuickReplies from \"./QuickReplies\";\r\nimport Login from \"../login/LoginForm\";\r\nimport IdleTimeOutModal from \"../autoLogout/IdleModal\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose, faComments } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Chatbot extends Component {\r\n\tmessageEnd;\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis._handleInputKeyPress = this._handleInputKeyPress.bind(this);\r\n\t\tthis._handleQuickReplyPayload = this._handleQuickReplyPayload.bind(this);\r\n\t\tthis.refreshPage = this.refreshPage.bind(this)\r\n\r\n\t\tthis.idleTimer = null;\r\n\t\tthis.handleOnAction = this.handleOnAction.bind(this);\r\n\t\tthis.handleOnActive = this.handleOnActive.bind(this);\r\n\t\tthis.handleOnIdle = this.handleOnIdle.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmessages: [],\r\n\t\t\tshowBot: false,\r\n\t\t\tshopWelcomeSent: false,\r\n\t\t\tisLogin: false,\r\n\t\t\tclickLogoutButton: false,\r\n\t\t\tuserEmail: \"\",\r\n\t\t\tidle: false,\r\n\t\t\tshowModal: false,\r\n\t\t};\r\n\r\n\t\tif (cookies.get(\"userID\") === undefined) {\r\n\t\t\tcookies.set(\"userID\", this.state.userEmail, { path: \"/\" });\r\n\t\t}\r\n\t\tconsole.log(cookies.get(\"userID\"));\r\n\t}\r\n\r\n\tasync df_text_query(queryText) {\r\n\t\tlet says = {\r\n\t\t\tspeaks: \"user\",\r\n\t\t\tmsg: {\r\n\t\t\t\ttext: {\r\n\t\t\t\t\ttext: queryText,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.setState({ messages: [...this.state.messages, says] });\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\"/api/df_text_query\", {\r\n\t\t\t\ttext: queryText,\r\n\t\t\t\tuserId: cookies.get(\"userID\"),\r\n\t\t\t});\r\n\t\t\tconsole.log(this.state.userEmail);\r\n\t\t\tfor (let msg of res.data.fulfillmentMessages) {\r\n\t\t\t\tsays = {\r\n\t\t\t\t\tspeaks: \"chaty\",\r\n\t\t\t\t\tmsg: msg,\r\n\t\t\t\t};\r\n\t\t\t\tthis.setState({ messages: [...this.state.messages, says] });\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsays = {\r\n\t\t\t\tspeaks: \"chaty\",\r\n\t\t\t\tmsg: {\r\n\t\t\t\t\ttext: {\r\n\t\t\t\t\t\ttext:\r\n\t\t\t\t\t\t\t\"I'm having a problme. Need to terminate now. Will be back later.\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tthis.setState({ messages: [...this.state.messages, says] });\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ showBot: false });\r\n\t\t\t}, 2000);\r\n\t\t}\r\n\t}\r\n\r\n\tasync df_event_query(eventName) {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\"/api/df_event_query\", {\r\n\t\t\t\tevent: eventName,\r\n\t\t\t\tuserId: cookies.get(\"userID\"),\r\n\t\t\t});\r\n\t\r\n\t\t\tfor (let msg of res.data.fulfillmentMessages) {\r\n\t\t\t\tlet says = {\r\n\t\t\t\t\tspeaks: \"chaty\",\r\n\t\t\t\t\tmsg: msg,\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tthis.setState({ messages: [...this.state.messages, says] });\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.logoutWhenClosing();\r\n\t\tthis.df_event_query(\"Welcome\");\r\n\t\t/**if (window.location.pathname === \"/shop\" && !this.state.shopWelcomeSent) {\r\n\t\t\tawait this.resolveAfterXSeconds(2);\r\n\t\t\tthis.df_event_query(\"WELCOME_SHOP\");\r\n\t\t\tthis.setState({ shopWelcomeSent: true });\r\n\t\t}\r\n\t\tthis.props.history.listen(() => {\r\n\t\t\tconsole.log(\"Listening\");\r\n\t\t\tif (\r\n\t\t\t\tthis.props.history.location.pathname === \"/shop\" &&\r\n\t\t\t\t!this.state.shopWelcomeSent\r\n\t\t\t) {\r\n\t\t\t\tthis.df_event_query(\"WELCOME_SHOP\");\r\n\t\t\t\tthis.setState({ shopWelcomeSent: true });\r\n\t\t\t}\r\n\t\t}); */\r\n\t}\r\n\r\n\tresolveAfterXSeconds(x) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tresolve(x);\r\n\t\t\t}, x * 1000);\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (this.state.isLogin) {\r\n\t\t\tthis.messageEnd.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t}\r\n\t}\r\n\r\n\tShow = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t\tthis.setState({ showBot: true });\r\n\t};\r\n\r\n\tHide = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t\tthis.setState({ showBot: false });\r\n\t};\r\n\r\n\t_handleQuickReplyPayload(event, payload, text) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tswitch (payload) {\r\n\t\t\tcase \"recommend_yes\":\r\n\t\t\t\tthis.df_event_query(\"SHOW_RECOMMENDATIONS\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"training_masterclass\":\r\n\t\t\t\tthis.df_event_query(\"MASTERCLASS\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.df_text_query(text);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trenderCards(cards) {\r\n\t\treturn cards.map((card, i) => <Card key={i} payload={card.structValue} />);\r\n\t}\r\n\r\n\trenderOneMessage(message, i) {\r\n\t\tif (message.msg && message.msg.text && message.msg.text.text) {\r\n\t\t\treturn (\r\n\t\t\t\t<Message key={i} speaks={message.speaks} text={message.msg.text.text} />\r\n\t\t\t);\r\n\t\t} else if (\r\n\t\t\tmessage.msg &&\r\n\t\t\tmessage.msg.payload &&\r\n\t\t\tmessage.msg.payload.fields &&\r\n\t\t\tmessage.msg.payload.fields.cards\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={i}>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<div style={{ overflow: \"hidden\" }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: \"auto\",\r\n\t\t\t\t\t\t\t\t\twidth: \"auto\",\r\n\t\t\t\t\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"valign-wrapper\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.renderCards(\r\n\t\t\t\t\t\t\t\t\tmessage.msg.payload.fields.cards.listValue.values\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (\r\n\t\t\tmessage.msg &&\r\n\t\t\tmessage.msg.payload &&\r\n\t\t\tmessage.msg.payload.fields &&\r\n\t\t\tmessage.msg.payload.fields.quick_replies\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<QuickReplies\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tmessage.msg.payload.fields.text\r\n\t\t\t\t\t\t\t? message.msg.payload.fields.text\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\treplyClick={this._handleQuickReplyPayload}\r\n\t\t\t\t\tspeaks={message.speaks}\r\n\t\t\t\t\tpayload={message.msg.payload.fields.quick_replies.listValue.values}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trenderMessages(returnedMessages) {\r\n\t\tif (returnedMessages) {\r\n\t\t\treturn returnedMessages.map((message, i) => {\r\n\t\t\t\treturn this.renderOneMessage(message, i);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t_handleInputKeyPress(e) {\r\n\t\tif (e.key === \"Enter\") {\r\n\t\t\tthis.df_text_query(e.target.value);\r\n\t\t\te.target.value = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tmyCallBack = (dataFromLogin) => {\r\n\t\tif (dataFromLogin) {\r\n\t\t\tthis.setState({ isLogin: dataFromLogin });\r\n\t\t}\r\n\t};\r\n\r\n\tresetLogout = () => {\r\n\t\tthis.setState({ clickLogoutButton: false });\r\n\t};\r\n\r\n\tuserNameCallBack = (userEmailFromChild) => {\r\n\t\tconsole.log(userEmailFromChild);\r\n\t\tthis.setState({ userEmail: userEmailFromChild });\r\n\t};\r\n\r\n\tasync refreshPage() {\r\n\t\tawait this.setState({\r\n\t\t\tclickLogoutButton: true,\r\n\t\t\tisLogin: false,\r\n\t\t});\r\n\t\twindow.location.reload(false);\r\n\t};\r\n\r\n\thandleOnAction(event) {\r\n\t\tconsole.log(\"ssomeee\");\r\n\t}\r\n\r\n\thandleOnActive(event) {\r\n\t\tconsole.log(\"ssomeee\");\r\n\t}\r\n\r\n\thandleOnIdle() {\r\n\t\tthis.setState({ showModal: true });\r\n\t\tconsole.log(\"idel\");\r\n\t}\r\n\r\n\thandleStay = (userWantsStay) => {\r\n\t\tthis.setState({ showModal: userWantsStay });\r\n\t};\r\n\r\n\thandleLogout = (userWantsLogout) => {\r\n\t\tif (!userWantsLogout) {\r\n\t\t\tthis.setState({ showModal: false });\r\n\t\t\tthis.refreshPage();\r\n\t\t}\r\n\t};\r\n\r\n\tlogoutWhenClosing() {\r\n\t\t//window.addEventListener(\"beforeunload\", (ev) => {\r\n\t\t//\tev.preventDefault();\r\n\t\t//\tthis.refreshPage();\r\n\t\t//});\r\n\t}\r\n\r\n\trender() {\r\n\t\t/**showing prompted logout message*/\r\n\t\tif (this.state.showModal) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<IdleTimeOutModal\r\n\t\t\t\t\t\tshowModal={this.state.showModal}\r\n\t\t\t\t\t\thandleLogout={this.handleLogout}\r\n\t\t\t\t\t\thandleStay={this.handleStay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\tthis.messageEnd = el;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ float: \"left\", clear: \"both\" }}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t/**logged in */\r\n\t\telse if (this.state.showBot && this.state.isLogin) {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: \"whitesmoke\",\r\n\t\t\t\t\t\theight: 500,\r\n\t\t\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t\t\t\tborderTopRightRadius: 50,\r\n\t\t\t\t\t\tborderBottomLeftRadius: 50,\r\n\t\t\t\t\t\tborderBottomRightRadius: 0,\r\n\t\t\t\t\t\twidth: 400,\r\n\t\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\t\tbottom: 30,\r\n\t\t\t\t\t\tright: 15,\r\n\t\t\t\t\t\tborder: \"1px solid lightgrey\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"z-depth-3\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.logoutWhenClosing()}\r\n\t\t\t\t\t<IdleTimer\r\n\t\t\t\t\t\tref={(ref) => {\r\n\t\t\t\t\t\t\tthis.idleTimer = ref;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttimeout={10000000}\r\n\t\t\t\t\t\tonActive={this.handleOnActive}\r\n\t\t\t\t\t\tonIdle={this.handleOnIdle}\r\n\t\t\t\t\t\tonAction={this.handleOnAction}\r\n\t\t\t\t\t\tdebounce={250}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<nav style={{ borderTopLeftRadius: 0, borderTopRightRadius: 50, backgroundColor: '#2dbaed' }}>\r\n\t\t\t\t\t\t<div className=\"nav-wrapper\">\r\n\t\t\t\t\t\t\t<a className=\"brand-logo\" style={{ marginLeft: \"3%\", fontFamily:\"fantasy\" }}>\r\n\t\t\t\t\t\t\t\tChaty\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"200%\",\r\n\t\t\t\t\t\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\t\t\t\t\t\tright: 70,\r\n\t\t\t\t\t\t\t\t\t\t\tborder: \"1px solid lightgrey\",\r\n\t\t\t\t\t\t\t\t\t\t\tborderTopRightRadius: 13,\r\n\t\t\t\t\t\t\t\t\t\t\tborderBottomLeftRadius: 13,\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#6a52e3\"\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.refreshPage}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.Hide}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 25, marginRight: 15 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"chatbot\"\r\n\t\t\t\t\t\tstyle={{ height: 388, width: \"100%\", overflow: \"auto\", backgroundColor:\"white\",\r\n\t\t\t\t\t\toverflowX:'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.renderMessages(this.state.messages)}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\t\tthis.messageEnd = el;\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{ clear: \"both\" }}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"col s12\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\t\tbottom: \"0\",\r\n\t\t\t\t\t\t\t\tbackgroundColor: \"#603bbb\",\r\n\t\t\t\t\t\t\t\tborderBottomLeftRadius: 50,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input style={{color : \"white\", width : '90%', marginLeft : 28, marginBottom:15}}\r\n\t\t\t\t\t\t\t\tplaceholder=\"type a message: \"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonKeyPress={this._handleInputKeyPress}\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t/**open but not logged*/\r\n\t\telse if (\r\n\t\t\tthis.state.showBot &&\r\n\t\t\tthis.state.isLogin === false &&\r\n\t\t\tthis.state.clickLogoutButton === false\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: 500,\r\n\t\t\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t\t\t\tborderTopRightRadius: 50,\r\n\t\t\t\t\t\tborderBottomLeftRadius: 50,\r\n\t\t\t\t\t\tborderBottomRightRadius: 0,\r\n\t\t\t\t\t\twidth: 400,\r\n\t\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\t\tbottom: 30,\r\n\t\t\t\t\t\tright: 15,\r\n\t\t\t\t\t\tborder: \"1px solid lightgrey\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"z-depth-3\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<nav style={{ borderTopLeftRadius: 0, borderTopRightRadius: 50, backgroundColor: '#2dbaed' }}>\r\n\t\t\t\t\t\t<div className=\"nav-wrapper\">\r\n\t\t\t\t\t\t\t<a className=\"brand-logo\" style={{ marginLeft: \"3%\", fontFamily:\"fantasy\" }}>\r\n\t\t\t\t\t\t\t\tChaty\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.Hide}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 25, marginRight: 15 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<Login\r\n\t\t\t\t\t\tisThereUser={this.myCallBack}\r\n\t\t\t\t\t\tuserEmail={this.userNameCallBack}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t/**logout button is clicked*/\r\n\t\telse if (this.state.clickLogoutButton) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Login logout={true} />\r\n\t\t\t\t\t{this.resetLogout()}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t/**just chatbot icon*/\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\t\t\tbottom: 30,\r\n\t\t\t\t\t\t\tright: 50,\r\n\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ul\r\n\t\t\t\t\t\t\tid=\"nav-mobile\"\r\n\t\t\t\t\t\t\tclassName=\"right btn-floating btn-large waves-effect waves-light sky-blue z-depth-3\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"white\", fontSize: \"25px\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={this.Show}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faComments} />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\tthis.messageEnd = el;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ float: \"left\", clear: \"both\" }}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default withRouter(Chatbot);\r\n","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\shop\\ItemList.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\QuickReplies.js",["82"],"import React, { Component } from \"react\";\r\nimport QuickReply from \"./QuickReply\";\r\n\r\nclass QuickReplies extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis._handleClick = this._handleClick.bind(this);\r\n\t}\r\n\r\n\t_handleClick(event, payload, text) {\r\n\t\tthis.props.replyClick(event, payload, text);\r\n\t}\r\n\r\n\trenderQuickReply(reply, i){\r\n\t\treturn <QuickReply key={i} click={this._handleClick} reply={reply} />;\r\n\t}\r\n\r\n\trenderQuickReplies(quickReplies) {\r\n\t\tif (quickReplies) {\r\n\t\t\treturn quickReplies.map((reply, i) => {\r\n\t\t\t\treturn this.renderQuickReply(reply, i);\r\n\t\t\t});\r\n\t\t} else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col s12 m8 offset-m2 16 offset-13\">\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<div className=\"row\" style={{marginTop:10}}>\r\n\t\t\t\t\t\t<div className=\"col s2 left\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"btn-floating btn-large waves-effect waves-light blue\" style={{marginLeft:11}}>\r\n\t\t\t\t\t\t\t\t{this.props.speaks}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/*quick replies button into one line*/}\r\n\t\t\t\t\t\t<div id=\"quick-replies\"\r\n\t\t\t\t\t\t\tclassName=\"col left\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop:'19px',\r\n\t\t\t\t\t\t\t\tmarginLeft:\"23px\",\r\n\t\t\t\t\t\t\t\tbackgroundColor: \"darkblue\",\r\n\t\t\t\t\t\t\t\tpadding: 5,\r\n\t\t\t\t\t\t\t\tborderTopRightRadius: 10,\r\n\t\t\t\t\t\t\t\tborderBottomRightRadius: 10,\r\n\t\t\t\t\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t\t\t\t\t\tborderBottomLeftRadius: 10,\r\n\t\t\t\t\t\t\t\ttextAlign: \"left\",\r\n\t\t\t\t\t\t\t\tmaxWidth: \"75%\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{this.props.text && <p style={{color:'white'}}>{this.props.text.stringValue}</p>}\r\n\t\t\t\t\t\t\t{this.renderQuickReplies(this.props.payload)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default QuickReplies;\r\n","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Message.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\Card.js",["83"],"import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div style={{ width: 270, padding:20 }}>\r\n\t\t\t<div className=\"card\" style={{margin:0}}>\r\n\t\t\t\t<div className=\"card-image\" style={{width:200, height: 200, overflow:\"hidden\"}}>\r\n\t\t\t\t\t<img src={props.payload.fields.image.stringValue} alt={props.payload.fields.header.stringValue} />\r\n\t\t\t\t\t<span className=\"card-title\">{props.payload.fields.header.stringValue}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-content\" style={{width:200, height: 75, overflow:\"hidden\", padding:10}}>\r\n\t\t\t\t\t{props.payload.fields.description.stringValue}\r\n                    <p><a>{props.payload.fields.price.stringValue}</a></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-action\">\r\n\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={props.payload.fields.link.stringValue}>See Him</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\autoLogout\\IdleModal.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\LoginForm.js",["84","85"],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\chatbot\\QuickReply.js",["86"],"import React from \"react\";\r\n\r\nconst QuickReply = (props) => {\r\n\tif (props.reply.structValue.fields.payload) {\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\thref=\"#\"\r\n\t\t\t\tclassName=\"waves-effect waves-light btn-small white-text\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground:\r\n\t\t\t\t\t\t\"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(27,153,201,1) 83%, rgba(0,212,255,1) 100%)\",\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={(event) =>\r\n\t\t\t\t\tprops.click(\r\n\t\t\t\t\t\tevent,\r\n\t\t\t\t\t\tprops.reply.structValue.fields.payload.stringValue,\r\n\t\t\t\t\t\tprops.reply.structValue.fields.text.stringValue\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{props.reply.structValue.fields.text.stringValue}\r\n\t\t\t</a>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\thref={props.reply.structValue.fields.link.stringValue}\r\n\t\t\t\ttarget=\"_blank\"\r\n                rel=\"noreferrer\"\r\n\t\t\t\tclassName=\"waves-effect waves-light btn-small white-text\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground:\r\n\t\t\t\t\t\t\"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(27,153,201,1) 83%, rgba(0,212,255,1) 100%)\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{props.reply.structValue.fields.text.stringValue}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default QuickReply;\r\n","E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\FireBaseLogin.js",[],"E:\\Projects\\Projects\\chatbot-Dangalla Sir - copy\\client\\src\\components\\login\\fire.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":352,"column":8,"nodeType":"95","endLine":352,"endColumn":85},{"ruleId":"93","severity":1,"message":"94","line":442,"column":8,"nodeType":"95","endLine":442,"endColumn":85},{"ruleId":"93","severity":1,"message":"96","line":34,"column":8,"nodeType":"95","endLine":34,"endColumn":109},{"ruleId":"93","severity":1,"message":"94","line":13,"column":24,"nodeType":"95","endLine":13,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":38,"column":5,"nodeType":"99","messageId":"100","endLine":47,"endColumn":6},{"ruleId":"97","severity":1,"message":"98","line":75,"column":5,"nodeType":"99","messageId":"100","endLine":84,"endColumn":6},{"ruleId":"93","severity":1,"message":"96","line":6,"column":4,"nodeType":"95","endLine":20,"endColumn":5},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]